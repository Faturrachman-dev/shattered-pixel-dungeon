---
description: Intermediate reflection for Level 3 features. Guides AI to create a detailed reflection document in `memory-bank/reflection/`, reviewing all development phases using `edit_file`.
globs: **/Level3/reflection-intermediate.mdc
alwaysApply: false
---
# LEVEL 3 REFLECTION: INTERMEDIATE FEATURE REVIEW (AI Instructions)

> **TL;DR:** This rule structures the reflection process for a completed Level 3 intermediate feature. Use `edit_file` to create a comprehensive `memory-bank/reflection/reflect-[feature_name_or_id]-[date].md` document, analyzing the entire development lifecycle.

This rule is typically fetched by the REFLECT mode orchestrator if the task is L3.

## ⚙️ AI ACTIONS FOR LEVEL 3 REFLECTION:

1.  **Acknowledge & Context Gathering:**
    a.  State: "Initiating Intermediate Reflection for Level 3 feature: [Feature Name from activeContext.md]."
    b.  `read_file memory-bank/tasks.md` for the original plan, requirements, and links to creative docs.
    c.  `read_file memory-bank/progress.md` for the detailed implementation journey.
    d.  `read_file` all relevant `memory-bank/creative/creative-[aspect_name]-[date].md` documents.
    e.  `read_file memory-bank/activeContext.md` to confirm implementation is marked complete.
2.  **Prepare Reflection Content (Based on Template Below):**
    a.  Synthesize information from all gathered documents. Analyze each phase of the L3 workflow.
3.  **Create Reflection File:**
    a.  Determine reflection filename: `reflect-[feature_name_or_id]-[date].md`.
    b.  Use `edit_file` to create/update `memory-bank/reflection/[reflection_filename.md]` with the structured content.
        **L3 Reflection Structure (Content for `edit_file`):**
        ```markdown
        # Feature Reflection: [Feature Name from tasks.md]

        ## Feature ID: [Feature ID from tasks.md]
        ## Date of Reflection: [Current Date]
        ## Complexity Level: 3

        ## 1. Brief Feature Summary & Overall Outcome
        [What was the feature? What was its main goal? How well was the goal achieved? Did it meet all critical requirements from `tasks.md`?]

        ## 2. Planning Phase Review
        - How effective was the comprehensive planning (`Level3/planning-comprehensive.mdc`)?
        - Was the initial breakdown in `tasks.md` (components, strategy, risks) accurate?
        - What worked well in planning? What could have been planned better?
        - Were estimations (if made) accurate? Reasons for variance?

        ## 3. Creative Phase(s) Review (if applicable)
        - Were the correct aspects of the feature flagged for CREATIVE mode?
        - Review each `creative-*.md` document:
          - How effective were the design decisions?
          - Did the designs translate well into practical implementation? Any friction?
          - Was the `style-guide.md` sufficient?
        - What could improve the creative process for similar features?

        ## 4. Implementation Phase Review
        - What were the major successes during implementation (e.g., efficient module development, good use of libraries)?
        - What were the biggest challenges or roadblocks? How were they overcome?
        - Were there any unexpected technical difficulties or complexities?
        - How was adherence to the style guide and coding standards during implementation?
        - Review `progress.md` for key implementation notes: were there deviations from plan? Why?

        ## 5. Testing Phase Review
        - Was the testing strategy (unit, integration, E2E for the feature) effective?
        - Did testing uncover significant issues early enough?
        - What could improve the testing process for similar features?
        - Were there any bugs found post-implementation that testing should have caught?

        ## 6. What Went Well? (Overall - Highlight 3-5 key positives for this feature)
        - [Positive 1]
        - [Positive 2]
        - [Positive 3]

        ## 7. What Could Have Been Done Differently? (Overall - Identify 3-5 areas for improvement)
        - [Improvement Area 1]
        - [Improvement Area 2]
        - [Improvement Area 3]

        ## 8. Key Lessons Learned
        ### 8.1. Technical Lessons
        [New insights about technologies, patterns, architecture specific to this feature.]
        - Technical Lesson 1:
        ### 8.2. Process Lessons
        [Insights about the L3 workflow, communication, task management, tool usage.]
        - Process Lesson 1:
        ### 8.3. Estimation Lessons (if applicable)
        [Lessons about estimating work for features of this scale.]
        - Estimation Lesson 1:

        ## 9. Actionable Improvements for Future L3 Features
        [Specific, actionable suggestions for future intermediate feature development.]
        - Improvement 1: [e.g., "Standardize API error response format across modules."]
        - Improvement 2: [e.g., "Allocate more time for integration testing between X and Y components."]
        ```
4.  **Update Core Memory Bank Files (using `edit_file`):**
    a.  **`tasks.md`:**
        *   Mark the Level 3 feature's REFLECT phase as "COMPLETE".
        *   Add a link to the reflection document: `Reflection: ../reflection/[reflection_filename.md]`.
    b.  **`activeContext.md`:**
        *   Update current focus: "Reflection complete for L3 feature [Feature Name]. Ready for ARCHIVE."
        *   Add to log: "Completed reflection for L3 feature [Feature Name]. Document at `reflection/[reflection_filename.md]`."
5.  **Completion:**
    a.  State: "Intermediate reflection for Level 3 feature [Feature Name] complete. Reflection document created at `memory-bank/reflection/[reflection_filename.md]`."
    b.  (Control returns to the fetching rule).